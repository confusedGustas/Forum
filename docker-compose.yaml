services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    ports:
      - "8181:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KC_DB_URL_HOST: keycloak_postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB: postgres
      KC_DB_USERNAME: ${KC_POSTGRES_USERNAME}
      KC_DB_PASSWORD: ${KC_POSTGRES_PASSWORD}
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    env_file:
      - .env
    depends_on:
      - keycloak_postgres
    networks:
      - network
    command: start-dev --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import:ro

  keycloak_postgres:
    container_name: keycloak_postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${KC_POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - "2345:5432"
    networks:
      - network

  spring_postgres:
    container_name: spring_postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: forum
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DISABLE_POSTFIX: true
    env_file:
      - .env
    ports:
      - "8282:80"
    networks:
      - network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    ports:
      - "9090:9090"
    networks:
      - network

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "9191:3000"
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_SIGNOUT_MENU: true
      GF_AUTH_DISABLE_LOGIN_FORM: true
    networks:
      - network

  minio:
    container_name: minio
    image: bitnami/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_USERNAME}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_BUCKET}
    networks:
      - network

networks:
  network:
    name: network
    driver: bridge