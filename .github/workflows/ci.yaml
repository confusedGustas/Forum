name: Java CI with Docker Services

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Create .env file
        run: |
          echo "KC_ADMIN_USERNAME=admin" >> .env
          echo "KC_ADMIN_PASSWORD=admin" >> .env
          echo "SPRING_DATASOURCE_USERNAME=admin" >> .env
          echo "SPRING_DATASOURCE_PASSWORD=admin" >> .env
          echo "SPRING_USERNAME=admin" >> .env
          echo "SPRING_PASSWORD=admin" >> .env
          echo "PGADMIN_DEFAULT_EMAIL=admin@gmail.com" >> .env
          echo "PGADMIN_DEFAULT_PASSWORD=admin" >> .env
          echo "POSTGRES_USERNAME=admin" >> .env
          echo "POSTGRES_PASSWORD=admin" >> .env
          echo "KC_POSTGRES_USERNAME=admin" >> .env
          echo "KC_POSTGRES_PASSWORD=admin" >> .env
          echo "MINIO_USERNAME=admin" >> .env
          echo "MINIO_PASSWORD=adminadmin" >> .env
          echo "MINIO_BUCKET=forum-bucket" >> .env
          echo "MINIO_SERVER_URL=http://localhost:9000" >> .env

      - name: Start Docker services
        run: docker compose up -d

      - name: Wait for services to be ready
        run: sleep 60

      - name: Check service status
        run: docker compose ps

      - name: Check PostgreSQL readiness
        run: |
          docker exec spring_postgres pg_isready -U admin -d forum || (docker compose logs spring_postgres && exit 1)

      - name: Check Keycloak readiness
        run: |
          curl -s --retry 10 --retry-delay 5 http://localhost:8181/health/ready || (docker compose logs keycloak && exit 1)

      - name: Check MinIO readiness
        run: |
          curl -s --retry 5 --retry-delay 5 http://localhost:9000/minio/health/ready || (docker compose logs minio && exit 1)

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests with debug output
        run: mvn test -Dsurefire.useFile=false

      - name: Show logs if tests fail
        if: failure()
        run: docker compose logs

      - name: Clean up Docker services
        if: always()
        run: docker compose down